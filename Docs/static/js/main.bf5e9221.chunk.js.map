{"version":3,"sources":["CategorieAdd.js","GifGridItem.js","helpers/getGifs.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategorieAdd","setCategorie","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","placeholder","GifGridItem","title","url","className","src","alt","getGifs","categorie","a","server","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","React","loading","array","setArray","useEffect","then","imgs","useFecthGifs","GifExperApp","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LA8BeA,EA3BM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,uBAAMC,SARY,SAACC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC7BR,EAAa,CAACE,IAChBC,EAAc,KAId,UACE,2DACA,uBACEM,KAAK,OACLC,MAAOR,EACPS,SAjBc,SAACN,GACnBF,EAAcE,EAAEO,OAAOF,QAiBnBG,YAAY,c,OCpBPC,G,WAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAChC,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,S,uBCRHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACN,mCACTC,EAFe,uDACN,mCADM,cAEsDF,EAFtD,sBAGFG,MAAMD,GAHJ,cAGfE,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAKc,EAAIE,OAAOC,iBAAiBjB,QAThB,kBAYdY,GAZc,4CAAH,sDCOPM,EAAU,SAAC,GAAmB,IAAjBb,EAAgB,EAAhBA,UACxB,ECL0B,SAACA,GAC3B,MAA0Bc,IAAMlC,SAAS,CACvC0B,KAAM,GACNS,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAH,IAAMI,WAAU,WACdnB,EAAQC,GACPmB,MAAK,SAACC,GACHH,EAAS,CACLX,KAAKc,EACLL,SAAQ,SAGf,CAACf,IACGgB,EDViBK,CAAarB,GAAxBW,EAAb,EAAQL,KACR,OACE,qCACE,mCAAMN,EAAN,OACA,qBAAKJ,UAAU,8CAAf,SACGe,EAAOH,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOjBY,EAjBK,WAClB,MAAkC1C,mBAAS,IAA3C,mBAAOoB,EAAP,KAAkBrB,EAAlB,KAEA,OACE,qCACE,6CACA,cAAC,EAAD,CAAcA,aAAcA,IAC5B,uBACA,6BACGqB,EAAUQ,KAAI,SAACxB,EAAGuC,GAAJ,OACb,cAAC,EAAD,CAAiBvB,UAAWA,GAAduB,Y,MCRxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.bf5e9221.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CategorieAdd = ({ setCategorie }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInput = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handeSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2)\n      setCategorie([inputValue]);\n    setInputValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handeSubmit}>\n      <label>Ingresa una categoria </label>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInput}\n        placeholder=\"Panda\"\n      />\n    </form>\n  );\n};\n\nexport default CategorieAdd;\n\nCategorieAdd.propTypes = {\n  setCategorie: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport './GifGrids.css'\nexport const GifGridItem = ({title, url}) => {\n    return ( \n        <div className='card'>\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    );\n}\n\n\nGifGridItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n}\n\n","export const getGifs = async (categorie) => {\n  const apiKey = \"shMCmG36dXcHfbAIu4QtfDBSA2rZhIZd\";\n  const server = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${categorie}&limit=20`;\n  const resp = await fetch(server);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url\n    };\n  });\n  return gifs\n};\n","import React from \"react\";\nimport 'animate.css'\nimport { GifGridItem } from \"./GifGridItem\";\nimport { useFecthGifs } from \"./hooks/useFetchGifs\";\n\nimport \"./GifGrids.css\";\n\nexport const GifGrid = ({ categorie }) => {\n  const { data:images } = useFecthGifs(categorie);\n  return (\n    <>\n      <h3> {categorie} </h3>\n      <div className=\"cardGrid animate__animated animate__bounce \">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFecthGifs = (categorie) => {\n  const [array, setArray] = React.useState({\n    data: [],\n    loading: true\n  });\n\n  React.useEffect(() => {\n    getGifs(categorie)\n    .then((imgs)=>{\n        setArray({\n            data:imgs,\n            loading:false\n        })\n    })\n  }, [categorie]);\n  return array\n};\n","import React, { useState } from \"react\";\nimport CategorieAdd from \"./CategorieAdd\";\nimport { GifGrid } from \"./GifGrid\";\n\nconst GifExperApp = () => {\n  const [categorie, setCategorie] = useState([]);\n\n  return (\n    <>\n      <h1>GifExperApp</h1>\n      <CategorieAdd setCategorie={setCategorie} />\n      <hr />\n      <ol>\n        {categorie.map((e, i) => (\n          <GifGrid key={i} categorie={categorie} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExperApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExperApp from './GifExpertApp';\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExperApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}